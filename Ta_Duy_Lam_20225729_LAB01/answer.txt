Khi người dùng chọn “Cancel”, thông báo “You’ve chosen: No” sẽ xuất hiện do đoạn mã hiện tại chỉ kiểm tra tùy chọn "Yes". Trong trường hợp người dùng chọn "Cancel", giá trị trả về không phải là JOptionPane.YES_OPTION, dẫn đến việc chương trình mặc định trả về giá trị tương ứng với "No" cho tất cả các tùy chọn còn lại, bao gồm cả "Cancel". Do đó, thông báo "You’ve chosen: No" sẽ được hiển thị dù người dùng đã chọn "Cancel".

Để tùy chỉnh các tùy chọn cho người dùng trong JOptionPane, ta có thể sử dụng phương thức showOptionDialog. Dưới đây là hai ví dụ về cách tạo các tùy chọn khác nhau:

Ví dụ 1: Tùy chọn "Yes" và "No"
import javax.swing.*;

public class CustomOptionExample {
    public static void main(String[] args) {
        String[] options = {"Yes", "No"};
        int choice = JOptionPane.showOptionDialog(null, "Do you want to proceed?",
                "Choose an option", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]);

        if (choice == JOptionPane.YES_OPTION) { // Người dùng chọn "Yes"
            JOptionPane.showMessageDialog(null, "You chose Yes.");
        } else {
            JOptionPane.showMessageDialog(null, "You chose No.");
        }
    }
}
Ví dụ 2: Tùy chọn "I do" và "I don’t"
import javax.swing.*;

public class CustomOptionExample {
    public static void main(String[] args) {
        String[] options = {"I do", "I don’t"};
        int choice = JOptionPane.showOptionDialog(null, "Do you agree?",
                "Choose an option", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                null, options, options[0]);

        if (choice == JOptionPane.YES_OPTION) { // Người dùng chọn "I do"
            JOptionPane.showMessageDialog(null, "You chose I do.");
        } else {
            JOptionPane.showMessageDialog(null, "You chose I don’t.");
        }
    }
}

